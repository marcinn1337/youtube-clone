@use '../../abstracts';
.icon-btn {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	border: none;
	border-radius: abstracts.$borderRadius;
	text-decoration: none;
	z-index: 0;
	&::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		border-radius: abstracts.$borderRadius;
		transition: opacity abstracts.$colorTransitionTime;
		opacity: 0;
		z-index: -1;
	}
	&:hover::before {
		opacity: 1;
	}
}
.nav {
	.icon-btn {
		padding: 1.8rem;
		svg {
			width: 2.5rem;
			height: 2.5rem;
		}
	}
}

.comment {
	.icon-btn {
		padding-inline: 1rem;
	}
	&__footer {
		.icon-btn {
			padding-block: 1rem;
		}
	}
	&__header {
		.icon-btn {
			height: 100%;
			position: absolute;
			top: 0;
			right: 0;
		}
	}
}
// Icon Btn styles in <CommentInput /> component
.comment-input {
	.icon-btn {
		padding: 1rem;
		margin-block-start: 0.5rem;
		margin-inline-start: auto;
		svg {
			margin-inline-end: 1rem;
		}
	}
}
// Icon Btn style in channel searchbar
.channel {
	.searchbar-btn {
		padding: 1rem 2rem;
	}
}
// THEMES
.nav--dark,
.main-content--dark {
	.icon-btn {
		color: abstracts.$mainFontDark;
		svg {
			fill: abstracts.$mainFontDark;
		}
		&::before {
			background-color: abstracts.$hoverBgDark;
		}
	}
}
.nav--light,
.main-content--light {
	.icon-btn {
		color: abstracts.$mainFontLight;
		svg {
			fill: abstracts.$mainFontLight;
		}
		&::before {
			background-color: abstracts.$hoverBgLight;
		}
	}
}
